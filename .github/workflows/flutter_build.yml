name: Flutter Build CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
            channel: stable
            flutter-version-file: pubspec.yaml 

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Create firebase_options.dart
        run: |
          mkdir -p lib
          echo "${{ secrets.FIREBASE_OPTIONS_DART }}" > lib/firebase_options.dart

      - name: Install dependencies
        run: flutter pub get

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'


      - name: Build release APK (unsigned)
        run: flutter build apk --release --no-shrink

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned
          path: build/app/outputs/flutter-apk/app-release.apk

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
            channel: stable
            flutter-version-file: pubspec.yaml 

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Create firebase_options.dart
        run: |
          if (!(Test-Path -Path lib)) { New-Item -ItemType Directory -Path lib }
          echo "${{ secrets.FIREBASE_OPTIONS_DART }}" > lib/firebase_options.dart

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Upload Windows exe
        uses: actions/upload-artifact@v4
        with:
          name: windows-release-exe
          path: build/windows/runner/Release/fusionsolarau.exe

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
            channel: stable
            flutter-version-file: pubspec.yaml 

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Create firebase_options.dart
        run: |
          mkdir -p lib
          echo "${{ secrets.FIREBASE_OPTIONS_DART }}" > lib/firebase_options.dart

      - name: Install dependencies
        run: flutter pub get

      - name: Set up CocoaPods
        run: |
          sudo gem install cocoapods
          pod install --project-directory=ios

      - name: Build IPA
        run: |
          flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-ipa
          path: build/ios/ipa/*.ipa
